name: Build and Release

on:
  push:
    tags:
      - 'v*.*.*'  # 当推送版本标签时触发，如 v1.0.0
  workflow_dispatch:  # 允许手动触发

permissions:
  contents: write
  actions: read
  security-events: write

jobs:
  build-windows:
    runs-on: windows-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.32.2'
        channel: 'stable'

    - name: Enable Windows desktop
      run: flutter config --enable-windows-desktop

    - name: Get Flutter dependencies
      run: flutter pub get

    - name: Build Windows executable
      run: flutter build windows --release

    - name: Create Windows artifact
      run: |
        mkdir -p build/windows-release
        cp -r build/windows/x64/runner/Release/* build/windows-release/
        cd build/windows-release
        7z a -tzip ../../time_management-windows.zip *

    - name: Upload Windows build artifact
      uses: actions/upload-artifact@v4
      with:
        name: windows-build
        path: time_management-windows.zip

  build-android:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        distribution: 'zulu'
        java-version: '17'

    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.32.2'
        channel: 'stable'

    - name: Get Flutter dependencies
      run: flutter pub get

    - name: Build Android APK (split per ABI)
      run: flutter build apk --release --split-per-abi

    - name: Upload Android build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: android-builds
        path: build/app/outputs/flutter-apk/*.apk

  create-release:
    needs: [build-windows, build-android]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    permissions:
      contents: write
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Download Windows build
      uses: actions/download-artifact@v4
      with:
        name: windows-build
        path: ./artifacts/

    - name: Download Android builds
      uses: actions/download-artifact@v4
      with:
        name: android-builds
        path: ./artifacts/

    - name: Get version from tag
      id: get_version
      run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

    - name: List downloaded files
      run: ls -la ./artifacts/

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ github.ref_name }}
        name: Time Management ${{ steps.get_version.outputs.VERSION }}
        body: |
          ## 🚀 Time Management ${{ steps.get_version.outputs.VERSION }}
          
          ### 📱 Android APK
          - `app-arm64-v8a-release.apk` - 适用于64位ARM设备
          - `app-armeabi-v7a-release.apk` - 适用于32位ARM设备  
          - `app-x86_64-release.apk` - 适用于64位x86设备
          
          ### 💻 Windows
          - `time_management-windows.zip` - Windows桌面应用程序
          
          ### 📝 安装说明
          **Android:** 下载对应设备架构的APK文件直接安装
          **Windows:** 下载zip文件，解压后运行time_management.exe
          
          ---
          自动构建于 ${{ github.event.head_commit.timestamp }}
        draft: false
        prerelease: false
        files: |
          ./artifacts/time_management-windows.zip
          ./artifacts/*.apk
        token: ${{ secrets.GITHUB_TOKEN }}
